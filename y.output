Terminals which are not used

   "="
   COMMENT
   NEG


Grammar

    0 $accept: S $end

    1 S: program

    2 program: PROGRAM IDENT ";" block END_PROGRAM
    3        | error IDENT ";" block END_PROGRAM
    4        | PROGRAM IDENT ";" block error
    5        | PROGRAM error ";" block END_PROGRAM
    6        | PROGRAM IDENT error block END_PROGRAM

    7 block: decl_loop bBEGIN_PROGRAM stmt_loop
    8      | decl_loop error stmt_loop

    9 bBEGIN_PROGRAM: BEGIN_PROGRAM

   10 decl_loop: declaration ";" decl_loop
   11          | declaration ";"
   12          | declaration error

   13 stmt_loop: statement ";" stmt_loop
   14          | statement ";"
   15          | statement error stmt_loop
   16          | statement error

   17 declaration: ident_loop ":" array_decl INTEGER
   18            | ident_loop array_decl INTEGER

   19 ident_loop: iIDENT "," ident_loop
   20           | iIDENT
   21           | IDENT error ident_loop

   22 iIDENT: IDENT

   23 array_decl: /* empty */
   24           | ARRAY "[" NUMBER "]" OF
   25           | IDENT NUMBER "]" OF
   26           | ARRAY OF
   27           | ARRAY "]" OF
   28           | ARRAY "[" NUMBER OF
   29           | ARRAY "[" NUMBER "]" error
   30           | ARRAY "[" NUMBER error

   31 statement: var assign expr
   32          | var assign bool_expr "?" expr ":" expr
   33          | IF bool_expr THEN if_body ENDIF
   34          | WHILE bool_expr BEGINLOOP stmt_loop ENDLOOP
   35          | DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr
   36          | READ var_loop
   37          | WRITE var_loop
   38          | BREAK
   39          | CONTINUE
   40          | EXIT

   41 assign: ":="
   42       | error

   43 var_loop: var "," var_loop
   44         | var

   45 var: IDENT
   46    | IDENT "[" expr "]"

   47 if_body: stmt_loop ELSEIF bool_expr elseif_body
   48        | stmt_loop ELSE stmt_loop
   49        | stmt_loop

   50 elseif_body: stmt_loop ELSEIF bool_expr elseif_body
   51            | stmt_loop ELSE stmt_loop
   52            | stmt_loop

   53 bool_expr: relation_and_expr
   54          | relation_and_expr OR bool_expr

   55 relation_and_expr: relation_expr
   56                  | relation_expr AND relation_and_expr

   57 relation_expr: NOT expr comp expr
   58              | NOT TRUE
   59              | NOT FALSE
   60              | NOT "(" bool_expr ")"
   61              | expr comp expr
   62              | TRUE
   63              | FALSE
   64              | "(" bool_expr ")"
   65              | error

   66 comp: EQ
   67     | NEQ
   68     | LT
   69     | GT
   70     | LTE
   71     | GTE

   72 expr: mult_expr
   73     | expr "+" mult_expr
   74     | expr "-" mult_expr

   75 mult_expr: mult_expr "*" term
   76          | mult_expr "/" term
   77          | mult_expr "%" term
   78          | term

   79 term: "-" var
   80     | "-" NUMBER
   81     | "-" "(" expr ")"
   82     | var
   83     | NUMBER
   84     | "(" expr ")"


Terminals, with rules where they appear

$end (0) 0
error (256) 3 4 5 6 8 12 15 16 21 29 30 42 65
"+" (258) 73
"-" (259) 74 79 80 81
"*" (260) 75
"/" (261) 76
"%" (262) 77
"=" (263)
PROGRAM (264) 2 4 5 6
BEGIN_PROGRAM (265) 9
END_PROGRAM (266) 2 3 5 6
INTEGER (267) 17 18
ARRAY (268) 24 26 27 28 29 30
OF (269) 24 25 26 27 28
IF (270) 33
THEN (271) 33
ENDIF (272) 33
ELSE (273) 48 51
ELSEIF (274) 47 50
WHILE (275) 34 35
DO (276) 35
BEGINLOOP (277) 34 35
ENDLOOP (278) 34 35
BREAK (279) 38
CONTINUE (280) 39
EXIT (281) 40
READ (282) 36
WRITE (283) 37
AND (284) 56
OR (285) 54
NOT (286) 57 58 59 60
TRUE (287) 58 62
FALSE (288) 59 63
EQ (289) 66
NEQ (290) 67
LT (291) 68
GT (292) 69
LTE (293) 70
GTE (294) 71
";" (295) 2 3 4 5 10 11 13 14
":" (296) 17 32
"," (297) 19 43
"?" (298) 32
"[" (299) 24 28 29 30 46
"]" (300) 24 25 27 29 46
"(" (301) 60 64 81 84
")" (302) 60 64 81 84
":=" (303) 41
IDENT (304) 2 3 4 6 21 22 25 45 46
NUMBER (305) 24 25 28 29 30 80 83
COMMENT (306)
NEG (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
S (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3 4 5 6, on right: 1
block (56)
    on left: 7 8, on right: 2 3 4 5 6
bBEGIN_PROGRAM (57)
    on left: 9, on right: 7
decl_loop (58)
    on left: 10 11 12, on right: 7 8 10
stmt_loop (59)
    on left: 13 14 15 16, on right: 7 8 13 15 34 35 47 48 49 50 51
    52
declaration (60)
    on left: 17 18, on right: 10 11 12
ident_loop (61)
    on left: 19 20 21, on right: 17 18 19 21
iIDENT (62)
    on left: 22, on right: 19 20
array_decl (63)
    on left: 23 24 25 26 27 28 29 30, on right: 17 18
statement (64)
    on left: 31 32 33 34 35 36 37 38 39 40, on right: 13 14 15 16
assign (65)
    on left: 41 42, on right: 31 32
var_loop (66)
    on left: 43 44, on right: 36 37 43
var (67)
    on left: 45 46, on right: 31 32 43 44 79 82
if_body (68)
    on left: 47 48 49, on right: 33
elseif_body (69)
    on left: 50 51 52, on right: 47 50
bool_expr (70)
    on left: 53 54, on right: 32 33 34 35 47 50 54 60 64
relation_and_expr (71)
    on left: 55 56, on right: 53 54 56
relation_expr (72)
    on left: 57 58 59 60 61 62 63 64 65, on right: 55 56
comp (73)
    on left: 66 67 68 69 70 71, on right: 57 61
expr (74)
    on left: 72 73 74, on right: 31 32 46 57 61 73 74 81 84
mult_expr (75)
    on left: 75 76 77 78, on right: 72 73 74 75 76 77
term (76)
    on left: 79 80 81 82 83 84, on right: 75 76 77 78


state 0

    0 $accept: . S $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    S        go to state 3
    program  go to state 4


state 1

    3 program: error . IDENT ";" block END_PROGRAM

    IDENT  shift, and go to state 5


state 2

    2 program: PROGRAM . IDENT ";" block END_PROGRAM
    4        | PROGRAM . IDENT ";" block error
    5        | PROGRAM . error ";" block END_PROGRAM
    6        | PROGRAM . IDENT error block END_PROGRAM

    error  shift, and go to state 6
    IDENT  shift, and go to state 7


state 3

    0 $accept: S . $end

    $end  shift, and go to state 8


state 4

    1 S: program .

    $default  reduce using rule 1 (S)


state 5

    3 program: error IDENT . ";" block END_PROGRAM

    ";"  shift, and go to state 9


state 6

    5 program: PROGRAM error . ";" block END_PROGRAM

    ";"  shift, and go to state 10


state 7

    2 program: PROGRAM IDENT . ";" block END_PROGRAM
    4        | PROGRAM IDENT . ";" block error
    6        | PROGRAM IDENT . error block END_PROGRAM

    error  shift, and go to state 11
    ";"    shift, and go to state 12


state 8

    0 $accept: S $end .

    $default  accept


state 9

    3 program: error IDENT ";" . block END_PROGRAM

    IDENT  shift, and go to state 13

    block        go to state 14
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 10

    5 program: PROGRAM error ";" . block END_PROGRAM

    IDENT  shift, and go to state 13

    block        go to state 19
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 11

    6 program: PROGRAM IDENT error . block END_PROGRAM

    IDENT  shift, and go to state 13

    block        go to state 20
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 12

    2 program: PROGRAM IDENT ";" . block END_PROGRAM
    4        | PROGRAM IDENT ";" . block error

    IDENT  shift, and go to state 13

    block        go to state 21
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 13

   21 ident_loop: IDENT . error ident_loop
   22 iIDENT: IDENT .

    error  shift, and go to state 22

    INTEGER  reduce using rule 22 (iIDENT)
    ARRAY    reduce using rule 22 (iIDENT)
    ":"      reduce using rule 22 (iIDENT)
    ","      reduce using rule 22 (iIDENT)
    IDENT    reduce using rule 22 (iIDENT)


state 14

    3 program: error IDENT ";" block . END_PROGRAM

    END_PROGRAM  shift, and go to state 23


state 15

    7 block: decl_loop . bBEGIN_PROGRAM stmt_loop
    8      | decl_loop . error stmt_loop

    error          shift, and go to state 24
    BEGIN_PROGRAM  shift, and go to state 25

    bBEGIN_PROGRAM  go to state 26


state 16

   10 decl_loop: declaration . ";" decl_loop
   11          | declaration . ";"
   12          | declaration . error

    error  shift, and go to state 27
    ";"    shift, and go to state 28


state 17

   17 declaration: ident_loop . ":" array_decl INTEGER
   18            | ident_loop . array_decl INTEGER

    ARRAY  shift, and go to state 29
    ":"    shift, and go to state 30
    IDENT  shift, and go to state 31

    $default  reduce using rule 23 (array_decl)

    array_decl  go to state 32


state 18

   19 ident_loop: iIDENT . "," ident_loop
   20           | iIDENT .

    ","  shift, and go to state 33

    $default  reduce using rule 20 (ident_loop)


state 19

    5 program: PROGRAM error ";" block . END_PROGRAM

    END_PROGRAM  shift, and go to state 34


state 20

    6 program: PROGRAM IDENT error block . END_PROGRAM

    END_PROGRAM  shift, and go to state 35


state 21

    2 program: PROGRAM IDENT ";" block . END_PROGRAM
    4        | PROGRAM IDENT ";" block . error

    error        shift, and go to state 36
    END_PROGRAM  shift, and go to state 37


state 22

   21 ident_loop: IDENT error . ident_loop

    IDENT  shift, and go to state 13

    ident_loop  go to state 38
    iIDENT      go to state 18


state 23

    3 program: error IDENT ";" block END_PROGRAM .

    $default  reduce using rule 3 (program)


state 24

    8 block: decl_loop error . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 48
    statement  go to state 49
    var        go to state 50


state 25

    9 bBEGIN_PROGRAM: BEGIN_PROGRAM .

    $default  reduce using rule 9 (bBEGIN_PROGRAM)


state 26

    7 block: decl_loop bBEGIN_PROGRAM . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 51
    statement  go to state 49
    var        go to state 50


state 27

   12 decl_loop: declaration error .

    $default  reduce using rule 12 (decl_loop)


state 28

   10 decl_loop: declaration ";" . decl_loop
   11          | declaration ";" .

    IDENT  shift, and go to state 13

    $default  reduce using rule 11 (decl_loop)

    decl_loop    go to state 52
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 29

   24 array_decl: ARRAY . "[" NUMBER "]" OF
   26           | ARRAY . OF
   27           | ARRAY . "]" OF
   28           | ARRAY . "[" NUMBER OF
   29           | ARRAY . "[" NUMBER "]" error
   30           | ARRAY . "[" NUMBER error

    OF   shift, and go to state 53
    "["  shift, and go to state 54
    "]"  shift, and go to state 55


state 30

   17 declaration: ident_loop ":" . array_decl INTEGER

    ARRAY  shift, and go to state 29
    IDENT  shift, and go to state 31

    $default  reduce using rule 23 (array_decl)

    array_decl  go to state 56


state 31

   25 array_decl: IDENT . NUMBER "]" OF

    NUMBER  shift, and go to state 57


state 32

   18 declaration: ident_loop array_decl . INTEGER

    INTEGER  shift, and go to state 58


state 33

   19 ident_loop: iIDENT "," . ident_loop

    IDENT  shift, and go to state 13

    ident_loop  go to state 59
    iIDENT      go to state 18


state 34

    5 program: PROGRAM error ";" block END_PROGRAM .

    $default  reduce using rule 5 (program)


state 35

    6 program: PROGRAM IDENT error block END_PROGRAM .

    $default  reduce using rule 6 (program)


state 36

    4 program: PROGRAM IDENT ";" block error .

    $default  reduce using rule 4 (program)


state 37

    2 program: PROGRAM IDENT ";" block END_PROGRAM .

    $default  reduce using rule 2 (program)


state 38

   21 ident_loop: IDENT error ident_loop .

    $default  reduce using rule 21 (ident_loop)


state 39

   33 statement: IF . bool_expr THEN if_body ENDIF

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 68
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 40

   34 statement: WHILE . bool_expr BEGINLOOP stmt_loop ENDLOOP

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 74
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 41

   35 statement: DO . BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 75


state 42

   38 statement: BREAK .

    $default  reduce using rule 38 (statement)


state 43

   39 statement: CONTINUE .

    $default  reduce using rule 39 (statement)


state 44

   40 statement: EXIT .

    $default  reduce using rule 40 (statement)


state 45

   36 statement: READ . var_loop

    IDENT  shift, and go to state 47

    var_loop  go to state 76
    var       go to state 77


state 46

   37 statement: WRITE . var_loop

    IDENT  shift, and go to state 47

    var_loop  go to state 78
    var       go to state 77


state 47

   45 var: IDENT .
   46    | IDENT . "[" expr "]"

    "["  shift, and go to state 79

    $default  reduce using rule 45 (var)


state 48

    8 block: decl_loop error stmt_loop .

    $default  reduce using rule 8 (block)


state 49

   13 stmt_loop: statement . ";" stmt_loop
   14          | statement . ";"
   15          | statement . error stmt_loop
   16          | statement . error

    error  shift, and go to state 80
    ";"    shift, and go to state 81


state 50

   31 statement: var . assign expr
   32          | var . assign bool_expr "?" expr ":" expr

    error  shift, and go to state 82
    ":="   shift, and go to state 83

    assign  go to state 84


state 51

    7 block: decl_loop bBEGIN_PROGRAM stmt_loop .

    $default  reduce using rule 7 (block)


state 52

   10 decl_loop: declaration ";" decl_loop .

    $default  reduce using rule 10 (decl_loop)


state 53

   26 array_decl: ARRAY OF .

    $default  reduce using rule 26 (array_decl)


state 54

   24 array_decl: ARRAY "[" . NUMBER "]" OF
   28           | ARRAY "[" . NUMBER OF
   29           | ARRAY "[" . NUMBER "]" error
   30           | ARRAY "[" . NUMBER error

    NUMBER  shift, and go to state 85


state 55

   27 array_decl: ARRAY "]" . OF

    OF  shift, and go to state 86


state 56

   17 declaration: ident_loop ":" array_decl . INTEGER

    INTEGER  shift, and go to state 87


state 57

   25 array_decl: IDENT NUMBER . "]" OF

    "]"  shift, and go to state 88


state 58

   18 declaration: ident_loop array_decl INTEGER .

    $default  reduce using rule 18 (declaration)


state 59

   19 ident_loop: iIDENT "," ident_loop .

    $default  reduce using rule 19 (ident_loop)


state 60

   65 relation_expr: error .

    $default  reduce using rule 65 (relation_expr)


state 61

   79 term: "-" . var
   80     | "-" . NUMBER
   81     | "-" . "(" expr ")"

    "("     shift, and go to state 89
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 90

    var  go to state 91


state 62

   57 relation_expr: NOT . expr comp expr
   58              | NOT . TRUE
   59              | NOT . FALSE
   60              | NOT . "(" bool_expr ")"

    "-"     shift, and go to state 61
    TRUE    shift, and go to state 92
    FALSE   shift, and go to state 93
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 95
    mult_expr  go to state 72
    term       go to state 73


state 63

   62 relation_expr: TRUE .

    $default  reduce using rule 62 (relation_expr)


state 64

   63 relation_expr: FALSE .

    $default  reduce using rule 63 (relation_expr)


state 65

   64 relation_expr: "(" . bool_expr ")"
   84 term: "(" . expr ")"

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 96
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 97
    mult_expr          go to state 72
    term               go to state 73


state 66

   83 term: NUMBER .

    $default  reduce using rule 83 (term)


state 67

   82 term: var .

    $default  reduce using rule 82 (term)


state 68

   33 statement: IF bool_expr . THEN if_body ENDIF

    THEN  shift, and go to state 98


state 69

   53 bool_expr: relation_and_expr .
   54          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 99

    $default  reduce using rule 53 (bool_expr)


state 70

   55 relation_and_expr: relation_expr .
   56                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 100

    $default  reduce using rule 55 (relation_and_expr)


state 71

   61 relation_expr: expr . comp expr
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    comp  go to state 109


state 72

   72 expr: mult_expr .
   75 mult_expr: mult_expr . "*" term
   76          | mult_expr . "/" term
   77          | mult_expr . "%" term

    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112

    $default  reduce using rule 72 (expr)


state 73

   78 mult_expr: term .

    $default  reduce using rule 78 (mult_expr)


state 74

   34 statement: WHILE bool_expr . BEGINLOOP stmt_loop ENDLOOP

    BEGINLOOP  shift, and go to state 113


state 75

   35 statement: DO BEGINLOOP . stmt_loop ENDLOOP WHILE bool_expr

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 114
    statement  go to state 49
    var        go to state 50


state 76

   36 statement: READ var_loop .

    $default  reduce using rule 36 (statement)


state 77

   43 var_loop: var . "," var_loop
   44         | var .

    ","  shift, and go to state 115

    $default  reduce using rule 44 (var_loop)


state 78

   37 statement: WRITE var_loop .

    $default  reduce using rule 37 (statement)


state 79

   46 var: IDENT "[" . expr "]"

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 117
    mult_expr  go to state 72
    term       go to state 73


state 80

   15 stmt_loop: statement error . stmt_loop
   16          | statement error .

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    $default  reduce using rule 16 (stmt_loop)

    stmt_loop  go to state 118
    statement  go to state 49
    var        go to state 50


state 81

   13 stmt_loop: statement ";" . stmt_loop
   14          | statement ";" .

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    $default  reduce using rule 14 (stmt_loop)

    stmt_loop  go to state 119
    statement  go to state 49
    var        go to state 50


state 82

   42 assign: error .

    $default  reduce using rule 42 (assign)


state 83

   41 assign: ":=" .

    $default  reduce using rule 41 (assign)


state 84

   31 statement: var assign . expr
   32          | var assign . bool_expr "?" expr ":" expr

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 120
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 121
    mult_expr          go to state 72
    term               go to state 73


state 85

   24 array_decl: ARRAY "[" NUMBER . "]" OF
   28           | ARRAY "[" NUMBER . OF
   29           | ARRAY "[" NUMBER . "]" error
   30           | ARRAY "[" NUMBER . error

    error  shift, and go to state 122
    OF     shift, and go to state 123
    "]"    shift, and go to state 124


state 86

   27 array_decl: ARRAY "]" OF .

    $default  reduce using rule 27 (array_decl)


state 87

   17 declaration: ident_loop ":" array_decl INTEGER .

    $default  reduce using rule 17 (declaration)


state 88

   25 array_decl: IDENT NUMBER "]" . OF

    OF  shift, and go to state 125


state 89

   81 term: "-" "(" . expr ")"

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 126
    mult_expr  go to state 72
    term       go to state 73


state 90

   80 term: "-" NUMBER .

    $default  reduce using rule 80 (term)


state 91

   79 term: "-" var .

    $default  reduce using rule 79 (term)


state 92

   58 relation_expr: NOT TRUE .

    $default  reduce using rule 58 (relation_expr)


state 93

   59 relation_expr: NOT FALSE .

    $default  reduce using rule 59 (relation_expr)


state 94

   60 relation_expr: NOT "(" . bool_expr ")"
   84 term: "(" . expr ")"

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 127
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 97
    mult_expr          go to state 72
    term               go to state 73


state 95

   57 relation_expr: NOT expr . comp expr
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    comp  go to state 128


state 96

   64 relation_expr: "(" bool_expr . ")"

    ")"  shift, and go to state 129


state 97

   61 relation_expr: expr . comp expr
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr
   84 term: "(" expr . ")"

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108
    ")"  shift, and go to state 130

    comp  go to state 109


state 98

   33 statement: IF bool_expr THEN . if_body ENDIF

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 131
    statement  go to state 49
    var        go to state 50
    if_body    go to state 132


state 99

   54 bool_expr: relation_and_expr OR . bool_expr

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 133
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 100

   56 relation_and_expr: relation_expr AND . relation_and_expr

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    relation_and_expr  go to state 134
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 101

   73 expr: expr "+" . mult_expr

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    mult_expr  go to state 135
    term       go to state 73


state 102

   74 expr: expr "-" . mult_expr

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    mult_expr  go to state 136
    term       go to state 73


state 103

   66 comp: EQ .

    $default  reduce using rule 66 (comp)


state 104

   67 comp: NEQ .

    $default  reduce using rule 67 (comp)


state 105

   68 comp: LT .

    $default  reduce using rule 68 (comp)


state 106

   69 comp: GT .

    $default  reduce using rule 69 (comp)


state 107

   70 comp: LTE .

    $default  reduce using rule 70 (comp)


state 108

   71 comp: GTE .

    $default  reduce using rule 71 (comp)


state 109

   61 relation_expr: expr comp . expr

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 137
    mult_expr  go to state 72
    term       go to state 73


state 110

   75 mult_expr: mult_expr "*" . term

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var   go to state 67
    term  go to state 138


state 111

   76 mult_expr: mult_expr "/" . term

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var   go to state 67
    term  go to state 139


state 112

   77 mult_expr: mult_expr "%" . term

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var   go to state 67
    term  go to state 140


state 113

   34 statement: WHILE bool_expr BEGINLOOP . stmt_loop ENDLOOP

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 141
    statement  go to state 49
    var        go to state 50


state 114

   35 statement: DO BEGINLOOP stmt_loop . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 142


state 115

   43 var_loop: var "," . var_loop

    IDENT  shift, and go to state 47

    var_loop  go to state 143
    var       go to state 77


state 116

   84 term: "(" . expr ")"

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 144
    mult_expr  go to state 72
    term       go to state 73


state 117

   46 var: IDENT "[" expr . "]"
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    "]"  shift, and go to state 145


state 118

   15 stmt_loop: statement error stmt_loop .

    $default  reduce using rule 15 (stmt_loop)


state 119

   13 stmt_loop: statement ";" stmt_loop .

    $default  reduce using rule 13 (stmt_loop)


state 120

   32 statement: var assign bool_expr . "?" expr ":" expr

    "?"  shift, and go to state 146


state 121

   31 statement: var assign expr .
   61 relation_expr: expr . comp expr
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    $default  reduce using rule 31 (statement)

    comp  go to state 109


state 122

   30 array_decl: ARRAY "[" NUMBER error .

    $default  reduce using rule 30 (array_decl)


state 123

   28 array_decl: ARRAY "[" NUMBER OF .

    $default  reduce using rule 28 (array_decl)


state 124

   24 array_decl: ARRAY "[" NUMBER "]" . OF
   29           | ARRAY "[" NUMBER "]" . error

    error  shift, and go to state 147
    OF     shift, and go to state 148


state 125

   25 array_decl: IDENT NUMBER "]" OF .

    $default  reduce using rule 25 (array_decl)


state 126

   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr
   81 term: "-" "(" expr . ")"

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    ")"  shift, and go to state 149


state 127

   60 relation_expr: NOT "(" bool_expr . ")"

    ")"  shift, and go to state 150


state 128

   57 relation_expr: NOT expr comp . expr

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 151
    mult_expr  go to state 72
    term       go to state 73


state 129

   64 relation_expr: "(" bool_expr ")" .

    $default  reduce using rule 64 (relation_expr)


state 130

   84 term: "(" expr ")" .

    $default  reduce using rule 84 (term)


state 131

   47 if_body: stmt_loop . ELSEIF bool_expr elseif_body
   48        | stmt_loop . ELSE stmt_loop
   49        | stmt_loop .

    ELSE    shift, and go to state 152
    ELSEIF  shift, and go to state 153

    $default  reduce using rule 49 (if_body)


state 132

   33 statement: IF bool_expr THEN if_body . ENDIF

    ENDIF  shift, and go to state 154


state 133

   54 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 54 (bool_expr)


state 134

   56 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 56 (relation_and_expr)


state 135

   73 expr: expr "+" mult_expr .
   75 mult_expr: mult_expr . "*" term
   76          | mult_expr . "/" term
   77          | mult_expr . "%" term

    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112

    $default  reduce using rule 73 (expr)


state 136

   74 expr: expr "-" mult_expr .
   75 mult_expr: mult_expr . "*" term
   76          | mult_expr . "/" term
   77          | mult_expr . "%" term

    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112

    $default  reduce using rule 74 (expr)


state 137

   61 relation_expr: expr comp expr .
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102

    $default  reduce using rule 61 (relation_expr)


state 138

   75 mult_expr: mult_expr "*" term .

    $default  reduce using rule 75 (mult_expr)


state 139

   76 mult_expr: mult_expr "/" term .

    $default  reduce using rule 76 (mult_expr)


state 140

   77 mult_expr: mult_expr "%" term .

    $default  reduce using rule 77 (mult_expr)


state 141

   34 statement: WHILE bool_expr BEGINLOOP stmt_loop . ENDLOOP

    ENDLOOP  shift, and go to state 155


state 142

   35 statement: DO BEGINLOOP stmt_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 156


state 143

   43 var_loop: var "," var_loop .

    $default  reduce using rule 43 (var_loop)


state 144

   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr
   84 term: "(" expr . ")"

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    ")"  shift, and go to state 130


state 145

   46 var: IDENT "[" expr "]" .

    $default  reduce using rule 46 (var)


state 146

   32 statement: var assign bool_expr "?" . expr ":" expr

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 157
    mult_expr  go to state 72
    term       go to state 73


state 147

   29 array_decl: ARRAY "[" NUMBER "]" error .

    $default  reduce using rule 29 (array_decl)


state 148

   24 array_decl: ARRAY "[" NUMBER "]" OF .

    $default  reduce using rule 24 (array_decl)


state 149

   81 term: "-" "(" expr ")" .

    $default  reduce using rule 81 (term)


state 150

   60 relation_expr: NOT "(" bool_expr ")" .

    $default  reduce using rule 60 (relation_expr)


state 151

   57 relation_expr: NOT expr comp expr .
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102

    $default  reduce using rule 57 (relation_expr)


state 152

   48 if_body: stmt_loop ELSE . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 158
    statement  go to state 49
    var        go to state 50


state 153

   47 if_body: stmt_loop ELSEIF . bool_expr elseif_body

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 159
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 154

   33 statement: IF bool_expr THEN if_body ENDIF .

    $default  reduce using rule 33 (statement)


state 155

   34 statement: WHILE bool_expr BEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 34 (statement)


state 156

   35 statement: DO BEGINLOOP stmt_loop ENDLOOP WHILE . bool_expr

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 160
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 157

   32 statement: var assign bool_expr "?" expr . ":" expr
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102
    ":"  shift, and go to state 161


state 158

   48 if_body: stmt_loop ELSE stmt_loop .

    $default  reduce using rule 48 (if_body)


state 159

   47 if_body: stmt_loop ELSEIF bool_expr . elseif_body

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop    go to state 162
    statement    go to state 49
    var          go to state 50
    elseif_body  go to state 163


state 160

   35 statement: DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr .

    $default  reduce using rule 35 (statement)


state 161

   32 statement: var assign bool_expr "?" expr ":" . expr

    "-"     shift, and go to state 61
    "("     shift, and go to state 116
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var        go to state 67
    expr       go to state 164
    mult_expr  go to state 72
    term       go to state 73


state 162

   50 elseif_body: stmt_loop . ELSEIF bool_expr elseif_body
   51            | stmt_loop . ELSE stmt_loop
   52            | stmt_loop .

    ELSE    shift, and go to state 165
    ELSEIF  shift, and go to state 166

    $default  reduce using rule 52 (elseif_body)


state 163

   47 if_body: stmt_loop ELSEIF bool_expr elseif_body .

    $default  reduce using rule 47 (if_body)


state 164

   32 statement: var assign bool_expr "?" expr ":" expr .
   73 expr: expr . "+" mult_expr
   74     | expr . "-" mult_expr

    "+"  shift, and go to state 101
    "-"  shift, and go to state 102

    $default  reduce using rule 32 (statement)


state 165

   51 elseif_body: stmt_loop ELSE . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 167
    statement  go to state 49
    var        go to state 50


state 166

   50 elseif_body: stmt_loop ELSEIF . bool_expr elseif_body

    error   shift, and go to state 60
    "-"     shift, and go to state 61
    NOT     shift, and go to state 62
    TRUE    shift, and go to state 63
    FALSE   shift, and go to state 64
    "("     shift, and go to state 65
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 66

    var                go to state 67
    bool_expr          go to state 168
    relation_and_expr  go to state 69
    relation_expr      go to state 70
    expr               go to state 71
    mult_expr          go to state 72
    term               go to state 73


state 167

   51 elseif_body: stmt_loop ELSE stmt_loop .

    $default  reduce using rule 51 (elseif_body)


state 168

   50 elseif_body: stmt_loop ELSEIF bool_expr . elseif_body

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop    go to state 162
    statement    go to state 49
    var          go to state 50
    elseif_body  go to state 169


state 169

   50 elseif_body: stmt_loop ELSEIF bool_expr elseif_body .

    $default  reduce using rule 50 (elseif_body)
