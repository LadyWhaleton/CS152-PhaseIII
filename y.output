Terminals which are not used

   "="
   COMMENT
   NEG


Grammar

    0 $accept: S $end

    1 S: program

    2 program: PROGRAM IDENT ";" block END_PROGRAM
    3        | error IDENT ";" block END_PROGRAM
    4        | PROGRAM IDENT ";" block error
    5        | PROGRAM error ";" block END_PROGRAM
    6        | PROGRAM IDENT error block END_PROGRAM

    7 block: decl_loop bBEGIN_PROGRAM stmt_loop
    8      | decl_loop error stmt_loop

    9 bBEGIN_PROGRAM: BEGIN_PROGRAM

   10 decl_loop: declaration ";" decl_loop
   11          | declaration ";"
   12          | declaration error

   13 stmt_loop: statement ";" stmt_loop
   14          | statement ";"
   15          | statement error stmt_loop
   16          | statement error

   17 declaration: ident_loop ":" array_decl INTEGER
   18            | ident_loop array_decl INTEGER

   19 ident_loop: iIDENT "," ident_loop
   20           | iIDENT
   21           | IDENT error ident_loop

   22 iIDENT: IDENT

   23 array_decl: /* empty */
   24           | ARRAY "[" NUMBER "]" OF
   25           | IDENT NUMBER "]" OF
   26           | ARRAY OF
   27           | ARRAY "]" OF
   28           | ARRAY "[" NUMBER OF
   29           | ARRAY "[" NUMBER "]" error
   30           | ARRAY "[" NUMBER error

   31 statement: var assign expr
   32          | var assign bool_expr "?" expr ":" expr
   33          | if_ bool_expr middle THEN if_body ENDIF
   34          | iWHILE bool_expr iBEGINLOOP stmt_loop ENDLOOP
   35          | iDO BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr
   36          | iREAD var_loop
   37          | iWRITE var_loop
   38          | BREAK
   39          | CONTINUE
   40          | EXIT

   41 middle: /* empty */

   42 iWHILE: WHILE

   43 iBEGINLOOP: BEGINLOOP

   44 iDO: DO

   45 assign: ":="
   46       | error

   47 iREAD: READ

   48 iWRITE: WRITE

   49 var_loop: var iCOMMA var_loop
   50         | var

   51 iCOMMA: ","

   52 var: IDENT
   53    | IDENT "[" expr "]"

   54 if_: IF

   55 if_body: stmt_loop elseif_ bool_expr middle elseif_body
   56        | stmt_loop else_ stmt_loop
   57        | stmt_loop

   58 elseif_: ELSEIF

   59 elseif_body: stmt_loop elseif_ bool_expr middle elseif_body
   60            | stmt_loop else_ stmt_loop
   61            | stmt_loop

   62 else_: ELSE

   63 bool_expr: relation_and_expr
   64          | relation_and_expr OR bool_expr

   65 relation_and_expr: relation_expr
   66                  | relation_expr AND relation_and_expr

   67 relation_expr: NOT expr comp expr
   68              | NOT TRUE
   69              | NOT FALSE
   70              | NOT "(" bool_expr ")"
   71              | expr comp expr
   72              | TRUE
   73              | FALSE
   74              | "(" bool_expr ")"
   75              | error

   76 comp: EQ
   77     | NEQ
   78     | LT
   79     | GT
   80     | LTE
   81     | GTE

   82 expr: mult_expr
   83     | expr "+" mult_expr
   84     | expr "-" mult_expr

   85 mult_expr: mult_expr "*" term
   86          | mult_expr "/" term
   87          | mult_expr "%" term
   88          | term

   89 term: "-" var
   90     | "-" NUMBER
   91     | "-" "(" expr ")"
   92     | var
   93     | NUMBER
   94     | "(" expr ")"


Terminals, with rules where they appear

$end (0) 0
error (256) 3 4 5 6 8 12 15 16 21 29 30 46 75
"+" (258) 83
"-" (259) 84 89 90 91
"*" (260) 85
"/" (261) 86
"%" (262) 87
"=" (263)
PROGRAM (264) 2 4 5 6
BEGIN_PROGRAM (265) 9
END_PROGRAM (266) 2 3 5 6
INTEGER (267) 17 18
ARRAY (268) 24 26 27 28 29 30
OF (269) 24 25 26 27 28
IF (270) 54
THEN (271) 33
ENDIF (272) 33
ELSE (273) 62
ELSEIF (274) 58
WHILE (275) 35 42
DO (276) 44
BEGINLOOP (277) 35 43
ENDLOOP (278) 34 35
BREAK (279) 38
CONTINUE (280) 39
EXIT (281) 40
READ (282) 47
WRITE (283) 48
AND (284) 66
OR (285) 64
NOT (286) 67 68 69 70
TRUE (287) 68 72
FALSE (288) 69 73
EQ (289) 76
NEQ (290) 77
LT (291) 78
GT (292) 79
LTE (293) 80
GTE (294) 81
";" (295) 2 3 4 5 10 11 13 14
":" (296) 17 32
"," (297) 19 51
"?" (298) 32
"[" (299) 24 28 29 30 53
"]" (300) 24 25 27 29 53
"(" (301) 70 74 91 94
")" (302) 70 74 91 94
":=" (303) 45
IDENT (304) 2 3 4 6 21 22 25 52 53
NUMBER (305) 24 25 28 29 30 90 93
COMMENT (306)
NEG (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
S (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3 4 5 6, on right: 1
block (56)
    on left: 7 8, on right: 2 3 4 5 6
bBEGIN_PROGRAM (57)
    on left: 9, on right: 7
decl_loop (58)
    on left: 10 11 12, on right: 7 8 10
stmt_loop (59)
    on left: 13 14 15 16, on right: 7 8 13 15 34 35 55 56 57 59 60
    61
declaration (60)
    on left: 17 18, on right: 10 11 12
ident_loop (61)
    on left: 19 20 21, on right: 17 18 19 21
iIDENT (62)
    on left: 22, on right: 19 20
array_decl (63)
    on left: 23 24 25 26 27 28 29 30, on right: 17 18
statement (64)
    on left: 31 32 33 34 35 36 37 38 39 40, on right: 13 14 15 16
middle (65)
    on left: 41, on right: 33 55 59
iWHILE (66)
    on left: 42, on right: 34
iBEGINLOOP (67)
    on left: 43, on right: 34
iDO (68)
    on left: 44, on right: 35
assign (69)
    on left: 45 46, on right: 31 32
iREAD (70)
    on left: 47, on right: 36
iWRITE (71)
    on left: 48, on right: 37
var_loop (72)
    on left: 49 50, on right: 36 37 49
iCOMMA (73)
    on left: 51, on right: 49
var (74)
    on left: 52 53, on right: 31 32 49 50 89 92
if_ (75)
    on left: 54, on right: 33
if_body (76)
    on left: 55 56 57, on right: 33
elseif_ (77)
    on left: 58, on right: 55 59
elseif_body (78)
    on left: 59 60 61, on right: 55 59
else_ (79)
    on left: 62, on right: 56 60
bool_expr (80)
    on left: 63 64, on right: 32 33 34 35 55 59 64 70 74
relation_and_expr (81)
    on left: 65 66, on right: 63 64 66
relation_expr (82)
    on left: 67 68 69 70 71 72 73 74 75, on right: 65 66
comp (83)
    on left: 76 77 78 79 80 81, on right: 67 71
expr (84)
    on left: 82 83 84, on right: 31 32 53 67 71 83 84 91 94
mult_expr (85)
    on left: 85 86 87 88, on right: 82 83 84 85 86 87
term (86)
    on left: 89 90 91 92 93 94, on right: 85 86 87 88


state 0

    0 $accept: . S $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    S        go to state 3
    program  go to state 4


state 1

    3 program: error . IDENT ";" block END_PROGRAM

    IDENT  shift, and go to state 5


state 2

    2 program: PROGRAM . IDENT ";" block END_PROGRAM
    4        | PROGRAM . IDENT ";" block error
    5        | PROGRAM . error ";" block END_PROGRAM
    6        | PROGRAM . IDENT error block END_PROGRAM

    error  shift, and go to state 6
    IDENT  shift, and go to state 7


state 3

    0 $accept: S . $end

    $end  shift, and go to state 8


state 4

    1 S: program .

    $default  reduce using rule 1 (S)


state 5

    3 program: error IDENT . ";" block END_PROGRAM

    ";"  shift, and go to state 9


state 6

    5 program: PROGRAM error . ";" block END_PROGRAM

    ";"  shift, and go to state 10


state 7

    2 program: PROGRAM IDENT . ";" block END_PROGRAM
    4        | PROGRAM IDENT . ";" block error
    6        | PROGRAM IDENT . error block END_PROGRAM

    error  shift, and go to state 11
    ";"    shift, and go to state 12


state 8

    0 $accept: S $end .

    $default  accept


state 9

    3 program: error IDENT ";" . block END_PROGRAM

    IDENT  shift, and go to state 13

    block        go to state 14
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 10

    5 program: PROGRAM error ";" . block END_PROGRAM

    IDENT  shift, and go to state 13

    block        go to state 19
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 11

    6 program: PROGRAM IDENT error . block END_PROGRAM

    IDENT  shift, and go to state 13

    block        go to state 20
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 12

    2 program: PROGRAM IDENT ";" . block END_PROGRAM
    4        | PROGRAM IDENT ";" . block error

    IDENT  shift, and go to state 13

    block        go to state 21
    decl_loop    go to state 15
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 13

   21 ident_loop: IDENT . error ident_loop
   22 iIDENT: IDENT .

    error  shift, and go to state 22

    INTEGER  reduce using rule 22 (iIDENT)
    ARRAY    reduce using rule 22 (iIDENT)
    ":"      reduce using rule 22 (iIDENT)
    ","      reduce using rule 22 (iIDENT)
    IDENT    reduce using rule 22 (iIDENT)


state 14

    3 program: error IDENT ";" block . END_PROGRAM

    END_PROGRAM  shift, and go to state 23


state 15

    7 block: decl_loop . bBEGIN_PROGRAM stmt_loop
    8      | decl_loop . error stmt_loop

    error          shift, and go to state 24
    BEGIN_PROGRAM  shift, and go to state 25

    bBEGIN_PROGRAM  go to state 26


state 16

   10 decl_loop: declaration . ";" decl_loop
   11          | declaration . ";"
   12          | declaration . error

    error  shift, and go to state 27
    ";"    shift, and go to state 28


state 17

   17 declaration: ident_loop . ":" array_decl INTEGER
   18            | ident_loop . array_decl INTEGER

    ARRAY  shift, and go to state 29
    ":"    shift, and go to state 30
    IDENT  shift, and go to state 31

    $default  reduce using rule 23 (array_decl)

    array_decl  go to state 32


state 18

   19 ident_loop: iIDENT . "," ident_loop
   20           | iIDENT .

    ","  shift, and go to state 33

    $default  reduce using rule 20 (ident_loop)


state 19

    5 program: PROGRAM error ";" block . END_PROGRAM

    END_PROGRAM  shift, and go to state 34


state 20

    6 program: PROGRAM IDENT error block . END_PROGRAM

    END_PROGRAM  shift, and go to state 35


state 21

    2 program: PROGRAM IDENT ";" block . END_PROGRAM
    4        | PROGRAM IDENT ";" block . error

    error        shift, and go to state 36
    END_PROGRAM  shift, and go to state 37


state 22

   21 ident_loop: IDENT error . ident_loop

    IDENT  shift, and go to state 13

    ident_loop  go to state 38
    iIDENT      go to state 18


state 23

    3 program: error IDENT ";" block END_PROGRAM .

    $default  reduce using rule 3 (program)


state 24

    8 block: decl_loop error . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 48
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 25

    9 bBEGIN_PROGRAM: BEGIN_PROGRAM .

    $default  reduce using rule 9 (bBEGIN_PROGRAM)


state 26

    7 block: decl_loop bBEGIN_PROGRAM . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 56
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 27

   12 decl_loop: declaration error .

    $default  reduce using rule 12 (decl_loop)


state 28

   10 decl_loop: declaration ";" . decl_loop
   11          | declaration ";" .

    IDENT  shift, and go to state 13

    $default  reduce using rule 11 (decl_loop)

    decl_loop    go to state 57
    declaration  go to state 16
    ident_loop   go to state 17
    iIDENT       go to state 18


state 29

   24 array_decl: ARRAY . "[" NUMBER "]" OF
   26           | ARRAY . OF
   27           | ARRAY . "]" OF
   28           | ARRAY . "[" NUMBER OF
   29           | ARRAY . "[" NUMBER "]" error
   30           | ARRAY . "[" NUMBER error

    OF   shift, and go to state 58
    "["  shift, and go to state 59
    "]"  shift, and go to state 60


state 30

   17 declaration: ident_loop ":" . array_decl INTEGER

    ARRAY  shift, and go to state 29
    IDENT  shift, and go to state 31

    $default  reduce using rule 23 (array_decl)

    array_decl  go to state 61


state 31

   25 array_decl: IDENT . NUMBER "]" OF

    NUMBER  shift, and go to state 62


state 32

   18 declaration: ident_loop array_decl . INTEGER

    INTEGER  shift, and go to state 63


state 33

   19 ident_loop: iIDENT "," . ident_loop

    IDENT  shift, and go to state 13

    ident_loop  go to state 64
    iIDENT      go to state 18


state 34

    5 program: PROGRAM error ";" block END_PROGRAM .

    $default  reduce using rule 5 (program)


state 35

    6 program: PROGRAM IDENT error block END_PROGRAM .

    $default  reduce using rule 6 (program)


state 36

    4 program: PROGRAM IDENT ";" block error .

    $default  reduce using rule 4 (program)


state 37

    2 program: PROGRAM IDENT ";" block END_PROGRAM .

    $default  reduce using rule 2 (program)


state 38

   21 ident_loop: IDENT error ident_loop .

    $default  reduce using rule 21 (ident_loop)


state 39

   54 if_: IF .

    $default  reduce using rule 54 (if_)


state 40

   42 iWHILE: WHILE .

    $default  reduce using rule 42 (iWHILE)


state 41

   44 iDO: DO .

    $default  reduce using rule 44 (iDO)


state 42

   38 statement: BREAK .

    $default  reduce using rule 38 (statement)


state 43

   39 statement: CONTINUE .

    $default  reduce using rule 39 (statement)


state 44

   40 statement: EXIT .

    $default  reduce using rule 40 (statement)


state 45

   47 iREAD: READ .

    $default  reduce using rule 47 (iREAD)


state 46

   48 iWRITE: WRITE .

    $default  reduce using rule 48 (iWRITE)


state 47

   52 var: IDENT .
   53    | IDENT . "[" expr "]"

    "["  shift, and go to state 65

    $default  reduce using rule 52 (var)


state 48

    8 block: decl_loop error stmt_loop .

    $default  reduce using rule 8 (block)


state 49

   13 stmt_loop: statement . ";" stmt_loop
   14          | statement . ";"
   15          | statement . error stmt_loop
   16          | statement . error

    error  shift, and go to state 66
    ";"    shift, and go to state 67


state 50

   34 statement: iWHILE . bool_expr iBEGINLOOP stmt_loop ENDLOOP

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 76
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 51

   35 statement: iDO . BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 82


state 52

   36 statement: iREAD . var_loop

    IDENT  shift, and go to state 47

    var_loop  go to state 83
    var       go to state 84


state 53

   37 statement: iWRITE . var_loop

    IDENT  shift, and go to state 47

    var_loop  go to state 85
    var       go to state 84


state 54

   31 statement: var . assign expr
   32          | var . assign bool_expr "?" expr ":" expr

    error  shift, and go to state 86
    ":="   shift, and go to state 87

    assign  go to state 88


state 55

   33 statement: if_ . bool_expr middle THEN if_body ENDIF

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 89
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 56

    7 block: decl_loop bBEGIN_PROGRAM stmt_loop .

    $default  reduce using rule 7 (block)


state 57

   10 decl_loop: declaration ";" decl_loop .

    $default  reduce using rule 10 (decl_loop)


state 58

   26 array_decl: ARRAY OF .

    $default  reduce using rule 26 (array_decl)


state 59

   24 array_decl: ARRAY "[" . NUMBER "]" OF
   28           | ARRAY "[" . NUMBER OF
   29           | ARRAY "[" . NUMBER "]" error
   30           | ARRAY "[" . NUMBER error

    NUMBER  shift, and go to state 90


state 60

   27 array_decl: ARRAY "]" . OF

    OF  shift, and go to state 91


state 61

   17 declaration: ident_loop ":" array_decl . INTEGER

    INTEGER  shift, and go to state 92


state 62

   25 array_decl: IDENT NUMBER . "]" OF

    "]"  shift, and go to state 93


state 63

   18 declaration: ident_loop array_decl INTEGER .

    $default  reduce using rule 18 (declaration)


state 64

   19 ident_loop: iIDENT "," ident_loop .

    $default  reduce using rule 19 (ident_loop)


state 65

   53 var: IDENT "[" . expr "]"

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 95
    mult_expr  go to state 80
    term       go to state 81


state 66

   15 stmt_loop: statement error . stmt_loop
   16          | statement error .

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    $default  reduce using rule 16 (stmt_loop)

    stmt_loop  go to state 96
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 67

   13 stmt_loop: statement ";" . stmt_loop
   14          | statement ";" .

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    $default  reduce using rule 14 (stmt_loop)

    stmt_loop  go to state 97
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 68

   75 relation_expr: error .

    $default  reduce using rule 75 (relation_expr)


state 69

   89 term: "-" . var
   90     | "-" . NUMBER
   91     | "-" . "(" expr ")"

    "("     shift, and go to state 98
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 99

    var  go to state 100


state 70

   67 relation_expr: NOT . expr comp expr
   68              | NOT . TRUE
   69              | NOT . FALSE
   70              | NOT . "(" bool_expr ")"

    "-"     shift, and go to state 69
    TRUE    shift, and go to state 101
    FALSE   shift, and go to state 102
    "("     shift, and go to state 103
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 104
    mult_expr  go to state 80
    term       go to state 81


state 71

   72 relation_expr: TRUE .

    $default  reduce using rule 72 (relation_expr)


state 72

   73 relation_expr: FALSE .

    $default  reduce using rule 73 (relation_expr)


state 73

   74 relation_expr: "(" . bool_expr ")"
   94 term: "(" . expr ")"

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 105
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 106
    mult_expr          go to state 80
    term               go to state 81


state 74

   93 term: NUMBER .

    $default  reduce using rule 93 (term)


state 75

   92 term: var .

    $default  reduce using rule 92 (term)


state 76

   34 statement: iWHILE bool_expr . iBEGINLOOP stmt_loop ENDLOOP

    BEGINLOOP  shift, and go to state 107

    iBEGINLOOP  go to state 108


state 77

   63 bool_expr: relation_and_expr .
   64          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 109

    $default  reduce using rule 63 (bool_expr)


state 78

   65 relation_and_expr: relation_expr .
   66                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 110

    $default  reduce using rule 65 (relation_and_expr)


state 79

   71 relation_expr: expr . comp expr
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    EQ   shift, and go to state 113
    NEQ  shift, and go to state 114
    LT   shift, and go to state 115
    GT   shift, and go to state 116
    LTE  shift, and go to state 117
    GTE  shift, and go to state 118

    comp  go to state 119


state 80

   82 expr: mult_expr .
   85 mult_expr: mult_expr . "*" term
   86          | mult_expr . "/" term
   87          | mult_expr . "%" term

    "*"  shift, and go to state 120
    "/"  shift, and go to state 121
    "%"  shift, and go to state 122

    $default  reduce using rule 82 (expr)


state 81

   88 mult_expr: term .

    $default  reduce using rule 88 (mult_expr)


state 82

   35 statement: iDO BEGINLOOP . stmt_loop ENDLOOP WHILE bool_expr

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 123
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 83

   36 statement: iREAD var_loop .

    $default  reduce using rule 36 (statement)


state 84

   49 var_loop: var . iCOMMA var_loop
   50         | var .

    ","  shift, and go to state 124

    $default  reduce using rule 50 (var_loop)

    iCOMMA  go to state 125


state 85

   37 statement: iWRITE var_loop .

    $default  reduce using rule 37 (statement)


state 86

   46 assign: error .

    $default  reduce using rule 46 (assign)


state 87

   45 assign: ":=" .

    $default  reduce using rule 45 (assign)


state 88

   31 statement: var assign . expr
   32          | var assign . bool_expr "?" expr ":" expr

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 126
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 127
    mult_expr          go to state 80
    term               go to state 81


state 89

   33 statement: if_ bool_expr . middle THEN if_body ENDIF

    $default  reduce using rule 41 (middle)

    middle  go to state 128


state 90

   24 array_decl: ARRAY "[" NUMBER . "]" OF
   28           | ARRAY "[" NUMBER . OF
   29           | ARRAY "[" NUMBER . "]" error
   30           | ARRAY "[" NUMBER . error

    error  shift, and go to state 129
    OF     shift, and go to state 130
    "]"    shift, and go to state 131


state 91

   27 array_decl: ARRAY "]" OF .

    $default  reduce using rule 27 (array_decl)


state 92

   17 declaration: ident_loop ":" array_decl INTEGER .

    $default  reduce using rule 17 (declaration)


state 93

   25 array_decl: IDENT NUMBER "]" . OF

    OF  shift, and go to state 132


state 94

   94 term: "(" . expr ")"

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 133
    mult_expr  go to state 80
    term       go to state 81


state 95

   53 var: IDENT "[" expr . "]"
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    "]"  shift, and go to state 134


state 96

   15 stmt_loop: statement error stmt_loop .

    $default  reduce using rule 15 (stmt_loop)


state 97

   13 stmt_loop: statement ";" stmt_loop .

    $default  reduce using rule 13 (stmt_loop)


state 98

   91 term: "-" "(" . expr ")"

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 135
    mult_expr  go to state 80
    term       go to state 81


state 99

   90 term: "-" NUMBER .

    $default  reduce using rule 90 (term)


state 100

   89 term: "-" var .

    $default  reduce using rule 89 (term)


state 101

   68 relation_expr: NOT TRUE .

    $default  reduce using rule 68 (relation_expr)


state 102

   69 relation_expr: NOT FALSE .

    $default  reduce using rule 69 (relation_expr)


state 103

   70 relation_expr: NOT "(" . bool_expr ")"
   94 term: "(" . expr ")"

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 136
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 106
    mult_expr          go to state 80
    term               go to state 81


state 104

   67 relation_expr: NOT expr . comp expr
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    EQ   shift, and go to state 113
    NEQ  shift, and go to state 114
    LT   shift, and go to state 115
    GT   shift, and go to state 116
    LTE  shift, and go to state 117
    GTE  shift, and go to state 118

    comp  go to state 137


state 105

   74 relation_expr: "(" bool_expr . ")"

    ")"  shift, and go to state 138


state 106

   71 relation_expr: expr . comp expr
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr
   94 term: "(" expr . ")"

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    EQ   shift, and go to state 113
    NEQ  shift, and go to state 114
    LT   shift, and go to state 115
    GT   shift, and go to state 116
    LTE  shift, and go to state 117
    GTE  shift, and go to state 118
    ")"  shift, and go to state 139

    comp  go to state 119


state 107

   43 iBEGINLOOP: BEGINLOOP .

    $default  reduce using rule 43 (iBEGINLOOP)


state 108

   34 statement: iWHILE bool_expr iBEGINLOOP . stmt_loop ENDLOOP

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 140
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 109

   64 bool_expr: relation_and_expr OR . bool_expr

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 141
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 110

   66 relation_and_expr: relation_expr AND . relation_and_expr

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    relation_and_expr  go to state 142
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 111

   83 expr: expr "+" . mult_expr

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    mult_expr  go to state 143
    term       go to state 81


state 112

   84 expr: expr "-" . mult_expr

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    mult_expr  go to state 144
    term       go to state 81


state 113

   76 comp: EQ .

    $default  reduce using rule 76 (comp)


state 114

   77 comp: NEQ .

    $default  reduce using rule 77 (comp)


state 115

   78 comp: LT .

    $default  reduce using rule 78 (comp)


state 116

   79 comp: GT .

    $default  reduce using rule 79 (comp)


state 117

   80 comp: LTE .

    $default  reduce using rule 80 (comp)


state 118

   81 comp: GTE .

    $default  reduce using rule 81 (comp)


state 119

   71 relation_expr: expr comp . expr

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 145
    mult_expr  go to state 80
    term       go to state 81


state 120

   85 mult_expr: mult_expr "*" . term

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var   go to state 75
    term  go to state 146


state 121

   86 mult_expr: mult_expr "/" . term

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var   go to state 75
    term  go to state 147


state 122

   87 mult_expr: mult_expr "%" . term

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var   go to state 75
    term  go to state 148


state 123

   35 statement: iDO BEGINLOOP stmt_loop . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 149


state 124

   51 iCOMMA: "," .

    $default  reduce using rule 51 (iCOMMA)


state 125

   49 var_loop: var iCOMMA . var_loop

    IDENT  shift, and go to state 47

    var_loop  go to state 150
    var       go to state 84


state 126

   32 statement: var assign bool_expr . "?" expr ":" expr

    "?"  shift, and go to state 151


state 127

   31 statement: var assign expr .
   71 relation_expr: expr . comp expr
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    EQ   shift, and go to state 113
    NEQ  shift, and go to state 114
    LT   shift, and go to state 115
    GT   shift, and go to state 116
    LTE  shift, and go to state 117
    GTE  shift, and go to state 118

    $default  reduce using rule 31 (statement)

    comp  go to state 119


state 128

   33 statement: if_ bool_expr middle . THEN if_body ENDIF

    THEN  shift, and go to state 152


state 129

   30 array_decl: ARRAY "[" NUMBER error .

    $default  reduce using rule 30 (array_decl)


state 130

   28 array_decl: ARRAY "[" NUMBER OF .

    $default  reduce using rule 28 (array_decl)


state 131

   24 array_decl: ARRAY "[" NUMBER "]" . OF
   29           | ARRAY "[" NUMBER "]" . error

    error  shift, and go to state 153
    OF     shift, and go to state 154


state 132

   25 array_decl: IDENT NUMBER "]" OF .

    $default  reduce using rule 25 (array_decl)


state 133

   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr
   94 term: "(" expr . ")"

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    ")"  shift, and go to state 139


state 134

   53 var: IDENT "[" expr "]" .

    $default  reduce using rule 53 (var)


state 135

   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr
   91 term: "-" "(" expr . ")"

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    ")"  shift, and go to state 155


state 136

   70 relation_expr: NOT "(" bool_expr . ")"

    ")"  shift, and go to state 156


state 137

   67 relation_expr: NOT expr comp . expr

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 157
    mult_expr  go to state 80
    term       go to state 81


state 138

   74 relation_expr: "(" bool_expr ")" .

    $default  reduce using rule 74 (relation_expr)


state 139

   94 term: "(" expr ")" .

    $default  reduce using rule 94 (term)


state 140

   34 statement: iWHILE bool_expr iBEGINLOOP stmt_loop . ENDLOOP

    ENDLOOP  shift, and go to state 158


state 141

   64 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 64 (bool_expr)


state 142

   66 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 66 (relation_and_expr)


state 143

   83 expr: expr "+" mult_expr .
   85 mult_expr: mult_expr . "*" term
   86          | mult_expr . "/" term
   87          | mult_expr . "%" term

    "*"  shift, and go to state 120
    "/"  shift, and go to state 121
    "%"  shift, and go to state 122

    $default  reduce using rule 83 (expr)


state 144

   84 expr: expr "-" mult_expr .
   85 mult_expr: mult_expr . "*" term
   86          | mult_expr . "/" term
   87          | mult_expr . "%" term

    "*"  shift, and go to state 120
    "/"  shift, and go to state 121
    "%"  shift, and go to state 122

    $default  reduce using rule 84 (expr)


state 145

   71 relation_expr: expr comp expr .
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112

    $default  reduce using rule 71 (relation_expr)


state 146

   85 mult_expr: mult_expr "*" term .

    $default  reduce using rule 85 (mult_expr)


state 147

   86 mult_expr: mult_expr "/" term .

    $default  reduce using rule 86 (mult_expr)


state 148

   87 mult_expr: mult_expr "%" term .

    $default  reduce using rule 87 (mult_expr)


state 149

   35 statement: iDO BEGINLOOP stmt_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 159


state 150

   49 var_loop: var iCOMMA var_loop .

    $default  reduce using rule 49 (var_loop)


state 151

   32 statement: var assign bool_expr "?" . expr ":" expr

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 160
    mult_expr  go to state 80
    term       go to state 81


state 152

   33 statement: if_ bool_expr middle THEN . if_body ENDIF

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 161
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55
    if_body    go to state 162


state 153

   29 array_decl: ARRAY "[" NUMBER "]" error .

    $default  reduce using rule 29 (array_decl)


state 154

   24 array_decl: ARRAY "[" NUMBER "]" OF .

    $default  reduce using rule 24 (array_decl)


state 155

   91 term: "-" "(" expr ")" .

    $default  reduce using rule 91 (term)


state 156

   70 relation_expr: NOT "(" bool_expr ")" .

    $default  reduce using rule 70 (relation_expr)


state 157

   67 relation_expr: NOT expr comp expr .
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112

    $default  reduce using rule 67 (relation_expr)


state 158

   34 statement: iWHILE bool_expr iBEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 34 (statement)


state 159

   35 statement: iDO BEGINLOOP stmt_loop ENDLOOP WHILE . bool_expr

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 163
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 160

   32 statement: var assign bool_expr "?" expr . ":" expr
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    ":"  shift, and go to state 164


state 161

   55 if_body: stmt_loop . elseif_ bool_expr middle elseif_body
   56        | stmt_loop . else_ stmt_loop
   57        | stmt_loop .

    ELSE    shift, and go to state 165
    ELSEIF  shift, and go to state 166

    $default  reduce using rule 57 (if_body)

    elseif_  go to state 167
    else_    go to state 168


state 162

   33 statement: if_ bool_expr middle THEN if_body . ENDIF

    ENDIF  shift, and go to state 169


state 163

   35 statement: iDO BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr .

    $default  reduce using rule 35 (statement)


state 164

   32 statement: var assign bool_expr "?" expr ":" . expr

    "-"     shift, and go to state 69
    "("     shift, and go to state 94
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var        go to state 75
    expr       go to state 170
    mult_expr  go to state 80
    term       go to state 81


state 165

   62 else_: ELSE .

    $default  reduce using rule 62 (else_)


state 166

   58 elseif_: ELSEIF .

    $default  reduce using rule 58 (elseif_)


state 167

   55 if_body: stmt_loop elseif_ . bool_expr middle elseif_body

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 171
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 168

   56 if_body: stmt_loop else_ . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 172
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 169

   33 statement: if_ bool_expr middle THEN if_body ENDIF .

    $default  reduce using rule 33 (statement)


state 170

   32 statement: var assign bool_expr "?" expr ":" expr .
   83 expr: expr . "+" mult_expr
   84     | expr . "-" mult_expr

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112

    $default  reduce using rule 32 (statement)


state 171

   55 if_body: stmt_loop elseif_ bool_expr . middle elseif_body

    $default  reduce using rule 41 (middle)

    middle  go to state 173


state 172

   56 if_body: stmt_loop else_ stmt_loop .

    $default  reduce using rule 56 (if_body)


state 173

   55 if_body: stmt_loop elseif_ bool_expr middle . elseif_body

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop    go to state 174
    statement    go to state 49
    iWHILE       go to state 50
    iDO          go to state 51
    iREAD        go to state 52
    iWRITE       go to state 53
    var          go to state 54
    if_          go to state 55
    elseif_body  go to state 175


state 174

   59 elseif_body: stmt_loop . elseif_ bool_expr middle elseif_body
   60            | stmt_loop . else_ stmt_loop
   61            | stmt_loop .

    ELSE    shift, and go to state 165
    ELSEIF  shift, and go to state 166

    $default  reduce using rule 61 (elseif_body)

    elseif_  go to state 176
    else_    go to state 177


state 175

   55 if_body: stmt_loop elseif_ bool_expr middle elseif_body .

    $default  reduce using rule 55 (if_body)


state 176

   59 elseif_body: stmt_loop elseif_ . bool_expr middle elseif_body

    error   shift, and go to state 68
    "-"     shift, and go to state 69
    NOT     shift, and go to state 70
    TRUE    shift, and go to state 71
    FALSE   shift, and go to state 72
    "("     shift, and go to state 73
    IDENT   shift, and go to state 47
    NUMBER  shift, and go to state 74

    var                go to state 75
    bool_expr          go to state 178
    relation_and_expr  go to state 77
    relation_expr      go to state 78
    expr               go to state 79
    mult_expr          go to state 80
    term               go to state 81


state 177

   60 elseif_body: stmt_loop else_ . stmt_loop

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop  go to state 179
    statement  go to state 49
    iWHILE     go to state 50
    iDO        go to state 51
    iREAD      go to state 52
    iWRITE     go to state 53
    var        go to state 54
    if_        go to state 55


state 178

   59 elseif_body: stmt_loop elseif_ bool_expr . middle elseif_body

    $default  reduce using rule 41 (middle)

    middle  go to state 180


state 179

   60 elseif_body: stmt_loop else_ stmt_loop .

    $default  reduce using rule 60 (elseif_body)


state 180

   59 elseif_body: stmt_loop elseif_ bool_expr middle . elseif_body

    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    EXIT      shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    IDENT     shift, and go to state 47

    stmt_loop    go to state 174
    statement    go to state 49
    iWHILE       go to state 50
    iDO          go to state 51
    iREAD        go to state 52
    iWRITE       go to state 53
    var          go to state 54
    if_          go to state 55
    elseif_body  go to state 181


state 181

   59 elseif_body: stmt_loop elseif_ bool_expr middle elseif_body .

    $default  reduce using rule 59 (elseif_body)
